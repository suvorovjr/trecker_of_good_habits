version: '3.8'

volumes:
  pgdata:
  media:

services:
  db:
    image: postgres
    restart: on-failure
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL",  "pg_isready -U $POSTGRES_USER" ]
      interval: 10s
      retries: 3
      timeout: 5s

  redis:
    image: redis
    expose:
      - "6379"
  app:
    build: .
    tty: true
    ports:
      - "8000:8000"
    command: sh -c "python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./:/app
      - ./media:/app/media
  celery:
    build: .
    tty: true
    restart: always
    command: celery -A config worker -l INFO
    env_file:
      - .env
    volumes:
      - ./:/app
  celery-beat:
    build: .
    tty: true
    restart: always
    command: celery -A config beat -l INFO
    env_file:
      - .env
    volumes:
      - ./:/app